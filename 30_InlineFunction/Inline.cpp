/*
항목 30) 인라인 함수는 미주알고주알 따져서 이해해 두자
1. 함수 인라인은 작고, 자주 호출되는 함수에 대해서만 하는 것으로 묶어둡시다. 이렇게 하면 디버깅 및
 라이브러리의 바이너리 업그레이드가 용이해지고, 자칫 생길 수 있는 코드 부풀림 현상이 최소화되며, 프로그램의
 속력이 더 빨라질 수 있는 여지가 최고로 많아집니다.
 2. 함수 템플릿이 대개 헤더 파일에 들어간다는 일반적인 부분만 생각해서 이들을 inline으로 선언하면 안 됩니다.
*/

/* 
인라인 함수 : 함수 호출부를 함수 안의 내용으로 치환
*/
#include <iostream>

inline void f() {
	std::cout << "function" << std::endl;
}

int main()
{
	/*
    확실한 인라인 함수도 '어떻게 호출하느냐'에 따라 인라인 되기도 하고 안되기도 한다.
	*/
	void(*pf)() = f; //pf는 f를 가리크는 함수 포인터입니다.
	f(); // 이 호출은 인라인될 것입니다. "평범한" 함수 호출이니까요. -> 이 줄은 std::cout<<"Function"<<std::endl로 치환됨
	pf(); // 이 호출은 인라인되지 않을 것입니다. 함수 포인터를 통해 호출되고 있으니까요.
}