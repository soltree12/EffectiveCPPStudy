/*
항목 36) 상속받은 비가상 함수를 파생 클래스에서 재정의하는 것은 절대 금물!
1. 상속받은 비가상 함수를 재정의하는 일은 절대로 하지 맙시다.
*/

#include <iostream>

/*
1. B 객체에 해당되는 모든 것들이 D 객체에 그대로 적용됩니다. 왜냐하면 모든 D객체는 B 객체의 일종이기 때문입니다. (is-a 관계)
2. B에서 파생된 클래스는 mf 함수의 인터페이스와 '구현'을 모두 물려받게 됩니다. mf는 B 클래스에서 비가상 멤버 함수이기 때문입니다.
=> 구현을 물려받았는데 파생클래스에서 다시 구현하는 일은 있을 수 없으므로 어떤 상황에서도 상속받은 비가상 함수를 재정의하는 것은 절대 금물입니다.
*/
class B {
public:
	void mf()
	{
		std::cout << "B::mf" << std::endl;
	}
};

class D : public B {
public:
	void mf()
	{
		std::cout << "D::mf" << std::endl; // B::mf를 가려 버립니다.
	}
};

int main()
{
	D d; 
	B *pB = &d;
	D *pD = &d;

	pB->mf(); // B::mf를 호출합니다.
	pD->mf(); // D::mf를 호출합니다.
}