/*
항목22) 데이터 멤버가 선언될 곳은 private 영역임을 명심하자.
1. 데이터 멤버는 private 멤버로 선언합시다. 이를 통해 클래스 제작자는 문법적으로 일관성 있는 데이터 접근 통로를 제공할 수 있고, 필요에 따라서는 세밀한 접근 제어도
가능하며, 클래스의 불변속성을 강화할 수 있을 뿐 아니라, 내부 구현의 융통성도 발휘할 수 있습니다.
2. protected는 public보다 더 많이' 보호'받고 있는 것이 절대로 아닙니다.


* 캡슐화 : 현재의 구현을 나중에 바꾸기로 결정할 수 있는 권한을 예약하는 것
=> 데이터 멤버는 모두 캡슐화하자 (private 영역에 선언)
* 어떤 클래스에 public 데이터 멤버가 있고, 이것을 제거한다고 가정 -> 이 멤버에 매달려 있는 수많은 코드가 망가진다.
어떤 클래스의 protected 데이터 멤버를 제거한다고 가정 -> 이것을 사용하는 파생 클래스에 있는 수많은 코드가 망가진다.


*/